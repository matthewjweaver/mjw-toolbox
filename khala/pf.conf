leo_if="em0"
lan_if="athn0"
set skip on { lo enc0 }
block drop log

# tables used to filter bad actors
table <sshbots> counters persist file "/etc/pf.sshbots"
# Zap all traffic from addresses that scan ssh
block drop log quick from { <sshbots> } to any

# fair queueing, upstream
upstream="3M"
queue fq on $leo_if flows 1024 bandwidth $upstream max $upstream qlimit 1024 default
# fair queueing, downstream
downstream="3M"
queue fq on $lan_if flows 1024 bandwidth $downstream max $downstream qlimit 1024 default

match out on $leo_if from $lan_if:network to any nat-to ($leo_if)
match in  on $lan_if \
  proto { udp, tcp } \
  from $lan_if:network to any \
  port { domain, domain-s } \
  rdr-to $lan_if

# inet6 autoconfiguration
pass in log quick on $leo_if inet6 \
  proto icmp6 all \
  icmp6-type { echoreq routeradv neighbrsol neighbradv } keep state
pass out log quick on $leo_if inet6 \
  proto udp \
  from { fe80::/10, ff02::/10 } port dhcpv6-client \
  to { fe80::/10, ff02::/10 } port dhcpv6-server
pass in  log quick on $leo_if inet6 \
  proto udp \
  from { fe80::/10, ff02::/10 } port dhcpv6-server \
  to { fe80::/10, ff02::/10 } port dhcpv6-client

pass out log quick on $leo_if keep state
pass in  log quick on $leo_if proto tcp from any to ($leo_if) port ssh keep state
pass in  log quick on $leo_if inet proto icmp \
  from any to ($leo_if) \
  icmp-type 8 code 0 keep state

pass out log quick on $lan_if keep state
pass in  log quick on $lan_if proto tcp \
  from any to $lan_if \
  port { domain, domain-s, ssh, http, https, 4949 } keep state
pass in  log quick on $lan_if inet proto icmp \
  from any to $lan_if \
  icmp-type 8 code 0 keep state
pass in log quick on $lan_if \
  from $lan_if:network to any
