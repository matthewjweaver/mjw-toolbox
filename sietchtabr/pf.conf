clown_wg_if="wg1"
clown_wg_port="22713"
clown_wg_net="192.168.221.0/24"
ext_if=em0
haven_if=em4
int_if=em5
nodeless="{ \
  69.4.102.188, \
  155.138.220.216, \
  207.148.3.69 }"
o_int="192.168.223.2/32"
promised_lan_vpn_if="enc2"
promised_lan_int_if="vlan42"
promised_lan_nets="{ \
  10.42.1.0/24, \
  10.42.2.0/24, \
  10.42.3.0/24, \
  10.42.4.0/24, \
  10.42.253.0/24, \
  10.42.254.0/24 \
}"
static_ported="{ \
  192.168.223.21,
  192.168.223.24
}"
umbu_int="192.168.223.22/32"
untrusted_if=vlan666
uplink=em0
waps="{ \
  192.168.223.128, \
  192.168.223.129,
  192.168.223.130,
  192.168.223.131,
  192.168.233.132,
  192.168.223.133,
  192.168.223.134
 }"

set limit { \
  states 100000, \
  src-nodes 100000, \
  tables 10000, \
  table-entries 500000 }
set optimization conservative
set skip on { lo bridge0 enc0 }
#set state-defaults pflow
set ruleset-optimization profile

# normalize everything, avoid fragments, de-fingerprint tcp
match in on $ext_if scrub (max-mss 1440 no-df reassemble tcp)

# randomize outbound ids, de-fingerprint tcp
match out on $ext_if scrub (random-id reassemble tcp)

# match out on $
match out on $promised_lan_vpn_if \
  from $int_if:network to $promised_lan_nets \
  nat-to $promised_lan_int_if:0

# catch redirects early
match in on $ext_if \
  proto tcp from any to $ext_if:0 port 24625 \
  rdr-to $umbu_int port 32400
match in on $ext_if \
  proto { udp, tcp } from any to $ext_if:0 port 55555 \
  rdr-to $umbu_int
match in on $ext_if \
  proto tcp from any to $ext_if:0 port 22213 \
  rdr-to $o_int port 22

# tables used to filter bad actors
table <sshbots> counters persist file "/etc/pf.sshbots"

# uplink and lan get queues for the saturated case
queue fq on $ext_if   flows 2048 bandwidth 1G max 1G qlimit 2048 default
queue fq on $haven_if flows 2048 bandwidth 1G max 1G qlimit 2048 default
queue fq on $int_if   flows 2048 bandwidth 1G max 1G qlimit 2048 default

# default to block
block drop log

# Zap all traffic from addresses that scan ssh
block drop log quick from { <sshbots> } to any

# vpn to clown
pass in  log quick on $ext_if proto esp from $nodeless to $ext_if:0
pass out log quick on $ext_if proto esp from $ext_if:0 to $nodeless
pass in  log quick on $ext_if proto udp from $nodeless to $ext_if:0 \
  port { ipsec-nat-t, isakmp, $clown_wg_port } keep state
pass out log quick on $ext_if proto udp from $ext_if:0 to $nodeless \
  port { ipsec-nat-t, isakmp, $clown_wg_port } keep state

anchor grahams

# vpn with promised lan, anchored out into secondary file because FQDNs
anchor promised_lan
pass log quick on { $promised_lan_vpn_if, $promised_lan_int_if }

# label rest of uplink traffic for stats
pass  in log quick on $uplink from any to $nodeless label "$dstaddr-in" keep state
pass out log quick on $uplink from $nodeless to any label "$srcaddr-out" keep state

# wireguard interface facing clown hosts
pass in  log on $clown_wg_if from $clown_wg_net to any keep state
pass out log on $clown_wg_if from any to $clown_wg_net keep state

## external interface
# inet6 autoconfiguration
pass in log quick on $ext_if inet6 \
  proto icmp6 all \
  icmp6-type { echoreq routeradv neighbrsol neighbradv } keep state

# nat outbound
pass out log quick on $ext_if \
  from $static_ported nat-to $ext_if:0 static-port keep state
pass out log quick on $ext_if \
  from { $haven_if:network, \
         $int_if:network, \
         $untrusted_if:network } \
  nat-to $ext_if:0 keep state
pass out log quick on $ext_if inet from $ext_if keep state
pass out log quick on $ext_if inet6 from $ext_if keep state

# exposed services
pass in log on $ext_if inet  proto tcp from any to $ext_if \
  port { https, ssh } keep state
pass in log on $ext_if inet6 proto tcp from any to $ext_if \
  port { https, ssh } keep state
pass in log quick on $ext_if  \
  proto tcp from any to $umbu_int port 32400 keep state
pass in log quick on $ext_if  \
  proto { udp, tcp } from any to $umbu_int port 55555 keep state
pass in log quick on $ext_if  \
  proto tcp from any to $o_int port 22 keep state

# DMZ services
pass in log on $ext_if inet proto icmp \
  from $nodeless to $ext_if:0 \
  icmp-type 8 code 0 keep state
pass in log on $ext_if proto tcp \
  from $nodeless to $ext_if:0 \
  port { domain, https, ipsec-nat-t, isakmp, www, 853, 4949 } keep state
pass in log on $ext_if proto udp \
  from $nodeless to $ext_if:0 \
  port { domain, ipsec-nat-t, isakmp, ntp, tftp } keep state

## untrusted vlan (internet of things, etc)
pass in log quick on $untrusted_if proto { tcp, udp } \
  from $untrusted_if:network to !$int_if:0 \
  port { domain, domain-s } rdr-to $int_if:0 keep state
pass in log quick on $untrusted_if proto { tcp, udp } \
  from $untrusted_if:network to any \
  port { daap, ssdp, 5350, 5351, mdns, 49152:65535 } keep state
pass out log quick on $untrusted_if proto { tcp, udp } \
  from any to $untrusted_if:network \
  port { daap, ssdp, 5350, 5351, mdns, 49152:65535 } keep state
pass in log quick on $untrusted_if proto tcp \
  from $untrusted_if:network to any \
  port { https, www } keep state
pass in log quick on $untrusted_if proto tcp \
  from any to $untrusted_if:network \
  port { https, www } keep state
pass log quick on $untrusted_if proto udp \
  from 224.0.0.0/24 to any
pass log quick on $untrusted_if proto udp \
  from any to 224.0.0.0/24

## haven-facing physical interface
pass in log on $haven_if proto tcp \
  from $haven_if:network to $haven_if:0 \
  port { domain, https, ssh, www, 4949 } keep state
pass in log on $haven_if proto udp \
  from $haven_if:network to $haven_if:0 \
  port { domain, ntp } keep state
pass in  log quick on $haven_if proto udp \
  from $haven_if:network to any \
  port { syslog } keep state
pass in  log on $haven_if proto udp from port 68 to port 67
pass out log on $haven_if proto udp from port 67 to port 68
pass in  log quick on $haven_if proto tcp \
  from $haven_if:network to any \
  port { http, https, ssh, syslog-tls } keep state
pass out log quick on $haven_if proto tcp \
  from { $haven_if:0, $int_if:network } to $haven_if:network \
  port { http, https, ssh, 4949 } keep state
pass out log quick on $haven_if inet proto icmp \
  from $haven_if:0 to $haven_if:network \
  icmp-type 8 code 0 keep state

## lan-facing physical interface
pass in log quick on $int_if proto { tcp, udp } \
  from $int_if:network to !$int_if:0 \
  port { domain, domain-s } rdr-to $int_if:0 keep state
pass in log quick on $int_if proto tcp \
  from $int_if:network to $int_if:0 \
  port { https, ssh, www, 3000 } keep state
pass in log quick on $int_if proto udp \
  from $int_if:network to $int_if:0 \
  port { ntp, syslog, syslog-tls } keep state
pass in log quick on $int_if inet proto icmp \
  from $int_if:network to $int_if:0 \
  icmp-type 8 code 0 keep state
pass in  log quick on $int_if proto udp from port 68 to port 67
pass out log quick on $int_if proto udp from port 67 to port 68
pass in  log quick on $int_if from $int_if:network to any keep state
pass out log quick on $int_if from $int_if:0 to $int_if:network 
pass in  log quick on $int_if from 224.0.0.0/24 to any
pass out log quick on $int_if from any to 224.0.0.0/24
pass in  log on $int_if \
  proto tcp from any to $ext_if:0 port 24625 \
  rdr-to $umbu_int port 32400
pass out log quick on $int_if proto tcp to $umbu_int port 32400 \
  received-on $int_if nat-to $int_if
pass out log quick on $int_if from any to $int_if:network

## untrusted-facing vlan
pass in log quick on $untrusted_if proto { tcp, udp } \
  from $untrusted_if:network to !$untrusted_if:0 \
  port { domain, domain-s } rdr-to $untrusted_if:0 keep state
pass in log quick on $untrusted_if proto udp \
  from $untrusted_if:network to $untrusted_if:0 \
  port { ntp, syslog, syslog-tls } keep state
pass in log quick on $untrusted_if inet proto icmp \
  from $untrusted_if:network to $untrusted_if:0 \
  icmp-type 8 code 0 keep state
pass in  log quick on $untrusted_if proto udp from port 68 to port 67
pass out log quick on $untrusted_if proto udp from port 67 to port 68
pass in  log quick on $untrusted_if from $untrusted_if:network to ! $int_if:network keep state
pass out log quick on $untrusted_if from $untrusted_if:0 to $untrusted_if:network 
pass in  log quick on $untrusted_if from 224.0.0.0/24 to any
pass out log quick on $untrusted_if from any to 224.0.0.0/24
