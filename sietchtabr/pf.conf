# ssh_bad_boys:
#   < authlog awk '/Failed.*user/ { print $13 } /Failed.*root/ { $11 }'|sort -u|sed -e's%$%/32,%g'|xargs
# check & load:
#   doas pfctl -nf ./pf.conf && doas rsync pf.conf /etc/pf.conf && doas pfctl -f /etc/pf.conf

private_nets="{ 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.0.0.0/24, 192.168.0.0/16, 198.18.0.0/15 }"

net_int="192.168.223.0/24"
net_haven="192.168.235.0/24"
br_int="{ bridge1 }"
br_int_ifs="{ em4, em5, em6, em7 }"

net_ext="96.88.251.136/27"
br_ext="{ bridge0 }"
if_uplink="em0"

dmz_protos="{ ah, esp }"
dmz_services="{ ipsec-nat-t, isakmp, ssh }"

sietchtabr_haven_if="em3"
sietchtabr_haven="192.168.235.1"
sietchtabr_haven_services="{ domain, ntp, ssh }"
sietchtabr_int_if="vether1"
sietchtabr_int="192.168.223.1"
sietchtabr_int_services="{ domain, ipsec-nat-t, isakmp, ntp, ssh, http, https, tftp }"
sietchtabr_ext_if="vether0"
sietchtabr_ext="96.88.251.137"
sietchtabr_ext_nat="96.88.251.138"

sietchumbu_haven="192.168.235.2"
sietchumbu_haven_services="{ ssh }"
sietchumbu_ext_if="em2"
sietchumbu_ext="96.88.251.140"

ps3_if="em2"
ps3_ext="96.88.251.139"

otheym_int="192.168.223.2"
otheym_ext="96.88.251.141"
otheym_ext_services="{ 32400 }"

ap_int="192.168.223.3"
ap_int_services="{ https }"

hawat_int="192.168.223.6"
thufir_int="192.168.223.7"
shadeout_int="192.168.223.8"

lightbulbs="{ 192.168.223.20, 192.168.223.21, 192.168.223.22, 192.168.223.23 }"


set loginterface $if_uplink
# XXX TODO(matthewjweaver): filter enc0, too
set skip on { lo, enc0 }
set state-policy if-bound
block return log	# default to block and log

# external bridge
block drop on $br_ext
pass quick on $br_ext from any to $net_ext
pass quick on $br_ext from $net_ext to any


# internal bridge & member interfaces
pass quick on $br_int
pass quick on $br_int_ifs

# anchors
anchor "ftp-proxy/*"

# uplink
block drop quick on $if_uplink inet6 proto icmp6 from any to ff02::1 # router noise
block drop quick on $if_uplink inet from $private_nets to any # comcast internal noise
block drop quick on $if_uplink inet proto igmp from any to any # igmp noise
block drop quick on $if_uplink inet6 proto udp from any to any port 1900 # ipv6 ssdp? lol
block drop log on $if_uplink

pass in quick on $if_uplink inet proto icmp from any to { $sietchtabr_ext, $sietchumbu_ext } icmp-type 8 code 0 keep state
pass in quick on $if_uplink proto $dmz_protos from any to { $sietchtabr_ext, $sietchumbu_ext }
pass in quick on $if_uplink proto { tcp, udp } from any to { $sietchtabr_ext, $sietchumbu_ext } port $dmz_services keep state
pass out quick on $if_uplink inet proto icmp from { $sietchtabr_ext, $sietchumbu_ext } to any icmp-type 8 code 0 keep state
pass out quick on $if_uplink proto $dmz_protos from { $sietchtabr_ext, $sietchumbu_ext } to any
pass out quick on $if_uplink proto { tcp, udp } from { $sietchtabr_ext, $sietchumbu_ext } to any modulate state

pass in quick on $if_uplink proto tcp from any to $otheym_ext port $otheym_ext_services modulate state

pass in quick on $if_uplink proto tcp from any to $ps3_ext modulate state
pass in quick on $if_uplink proto udp from any to $ps3_ext keep state
pass out quick on $if_uplink proto tcp from $ps3_ext to any modulate state
pass out quick on $if_uplink proto udp from $ps3_ext to any keep state

pass out quick on $if_uplink proto tcp from { $sietchtabr_ext_nat } to any modulate state
pass out quick on $if_uplink proto udp from { $sietchtabr_ext_nat } to any keep state


# sietchtabr's external interface
block drop log on $sietchtabr_ext_if

pass in quick on $sietchtabr_ext_if proto $dmz_protos from any to $sietchtabr_ext
pass in quick on $sietchtabr_ext_if proto { tcp, udp } from any to $sietchtabr_ext port $dmz_services keep state
pass out quick on $sietchtabr_ext_if proto $dmz_protos from $sietchtabr_ext to any
pass out quick on $sietchtabr_ext_if proto { tcp, udp } from $sietchtabr_ext to any port $dmz_services keep state
pass out quick on $sietchtabr_ext_if proto udp from $sietchtabr_ext to any port { domain, ntp } keep state
pass out quick on $sietchtabr_ext_if proto tcp from $sietchtabr_ext to any port { domain, http, https, ntp, ssh } modulate state

pass in quick on $sietchtabr_ext_if proto tcp from any to $otheym_ext port $otheym_ext_services rdr-to $otheym_int modulate state

pass out quick on $sietchtabr_ext_if from $net_int to any nat-to $sietchtabr_ext_nat
pass out quick on $sietchtabr_ext_if from $net_haven to any nat-to $sietchtabr_ext_nat


# sietchumbu-facing external bridge member interface
block drop log on $sietchumbu_ext_if
pass in quick on $sietchumbu_ext_if proto $dmz_protos from $sietchumbu_ext to any
pass in quick on $sietchumbu_ext_if proto { tcp, udp } from $sietchumbu_ext to any port $dmz_services keep state
pass in quick on $sietchumbu_ext_if from $sietchumbu_ext to any keep state
pass out quick on $sietchumbu_ext_if proto $dmz_protos from any to $sietchumbu_ext
pass out quick on $sietchumbu_ext_if proto { tcp, udp } from any to $sietchumbu_ext port $dmz_services keep state


# ps3-facing external bridge member interface
block drop log on $ps3_if
pass in quick on $ps3_if proto udp from $ps3_ext to any keep state
pass in quick on $ps3_if proto tcp from $ps3_ext to any modulate state
pass out quick on $ps3_if proto udp from any to $ps3_ext keep state
pass out quick on $ps3_if proto tcp from any to $ps3_ext modulate state


# sietchtabr internal interface/downlink
block drop quick on $sietchtabr_int_if inet proto udp from any to $sietchtabr_int_if:broadcast port { 32412, 32414 }
block log on $sietchtabr_int_if from any to $net_haven
block return log on $sietchtabr_int_if

pass in quick on $sietchtabr_int_if inet proto udp from $lightbulbs to any port { domain, ntp } keep state
block return log quick on $sietchtabr_int_if from $lightbulbs to any
block return log quick on $sietchtabr_int_if from any to $lightbulbs

pass quick on $sietchtabr_int_if proto { ah, esp }

pass in quick on $sietchtabr_int_if inet proto tcp from $net_int to any port ftp divert-to 127.0.0.1 port 8021
pass in quick on $sietchtabr_int_if inet proto icmp from any to $sietchtabr_int icmp-type 8 code 0 keep state
pass in quick on $sietchtabr_int_if proto udp from { $net_int, $net_haven } to $sietchtabr_int port $sietchtabr_int_services keep state
pass in quick on $sietchtabr_int_if proto tcp from { $net_int, $net_haven } to $sietchtabr_int port $sietchtabr_int_services modulate state
pass in quick on $sietchtabr_int_if inet proto udp from { 0.0.0.0, $net_int } port 68 to { $sietchtabr_int, 255.255.255.255 } port 67 keep state
pass in quick on $sietchtabr_int_if from $net_int to ! $net_int keep state

pass in quick on $sietchtabr_int_if from $net_int to $sietchumbu_haven keep state

pass out on $sietchtabr_int_if keep state


# sietchtabr haven interface
block return log on $sietchtabr_haven_if
pass in quick on $sietchtabr_haven_if inet proto icmp from any to $sietchtabr_haven icmp-type 8 code 0 keep state
pass in quick on $sietchtabr_haven_if inet proto udp from any to $sietchtabr_haven port $sietchtabr_haven_services keep state
pass in quick on $sietchtabr_haven_if inet proto tcp from any to $sietchtabr_haven port $sietchtabr_haven_services keep state
pass out quick on $sietchtabr_haven_if inet proto icmp from { $net_int, $sietchtabr_haven } to $sietchumbu_haven icmp-type 8 code 0 keep state
pass out quick on $sietchtabr_haven_if inet proto tcp from { $net_int, $sietchtabr_haven } to $sietchumbu_haven port $sietchumbu_haven_services keep state
pass out quick on $sietchtabr_haven_if inet proto tcp from { $net_int, $sietchtabr_haven } to $sietchumbu_haven port $sietchumbu_haven_services keep state

