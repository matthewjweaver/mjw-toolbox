# TODO(weaver) : ipv6
ext_if=em0
haven_if=em4
int_if=em5
nodeless="{ \
  76.24.24.65, \
  155.138.220.216, \
  207.148.3.69 }"
o_int="192.168.223.2/32"
static_ported="{ \
  192.168.223.2,
  192.168.223.21
}"
umbu_int="192.168.223.22/32"
uplink=em0
waps="{ \
  192.168.223.3, \
  192.168.223.4,
  192.168.223.5 }"

set limit { \
  states 100000, \
  src-nodes 100000, \
  tables 10000, \
  table-entries 500000 }
set optimization conservative
set skip on { lo bridge0 enc0 }
#set state-defaults pflow
set ruleset-optimization profile

# normalize everything, avoid fragments, de-fingerprint tcp
match in on $ext_if scrub (max-mss 1440 no-df reassemble tcp)

# randomize outbound ids, de-fingerprint tcp
match out on $ext_if scrub (random-id reassemble tcp)

# catch p rdr early
match in on $ext_if \
  proto tcp from any to $ext_if:0 port 24625 \
  rdr-to $umbu_int port 32400

# tables used to filter bad actors
table <sshbots> counters persist file "/etc/pf.sshbots"

# uplink and lan get queues for the saturated case
queue fq on $ext_if   flows 2048 bandwidth 1G max 1G qlimit 2048 default
queue fq on $haven_if flows 2048 bandwidth 1G max 1G qlimit 2048 default
queue fq on $int_if   flows 2048 bandwidth 1G max 1G qlimit 2048 default

# default to block
block drop log

# Zap all traffic from addresses that scan ssh
block drop log quick from { <sshbots> } to any

# vpn
pass in  log quick on $ext_if proto esp from $nodeless to $ext_if:0
pass out log quick on $ext_if proto esp from $ext_if:0 to $nodeless
pass in  log quick on $ext_if proto udp from $nodeless to $ext_if:0 \
  port { ipsec-nat-t, isakmp } keep state
pass out log quick on $ext_if proto udp from $ext_if:0 to $nodeless \
  port { ipsec-nat-t, isakmp } keep state

pass  in log quick on $uplink from any to $nodeless label "$dstaddr-in" keep state
pass out log quick on $uplink from $nodeless to any label "$srcaddr-out" keep state

## external interface
pass out log quick on $ext_if \
  from $static_ported nat-to $ext_if:0 static-port keep state
pass out log quick on $ext_if \
  from { $haven_if:network, \
         $int_if:network } \
  nat-to $ext_if:0 keep state
pass out log quick on $ext_if from $ext_if:0 keep state

# exposed services
pass in log on $ext_if proto tcp from any to $ext_if:0 \
  port { https, ssh } keep state
pass in log quick on $ext_if \
  proto tcp from any to $umbu_int port 32400 keep state
pass in log quick on $ext_if \
  proto tcp from any to $ext_if:0 port 55555 \
  rdr-to $umbu_int

# DMZ services
pass in log on $ext_if inet proto esp \
  from $nodeless to $ext_if:0 keep state
pass in log on $ext_if inet proto icmp \
  from $nodeless to $ext_if:0 \
  icmp-type 8 code 0 keep state
pass in log on $ext_if proto tcp \
  from $nodeless to $ext_if:0 \
  port { domain, https, ipsec-nat-t, isakmp, www, 853, 4949 } keep state
pass in log on $ext_if proto udp \
  from $nodeless to $ext_if:0 \
  port { domain, ipsec-nat-t, isakmp, ntp, tftp } keep state


## haven-facing physical interface
pass in log on $haven_if proto tcp \
  from $haven_if:network to $haven_if:0 \
  port { domain, https, ssh, www, 4949 } keep state
pass in log on $haven_if proto udp \
  from $haven_if:network to $haven_if:0 \
  port { domain, ntp } keep state
pass in  log on $haven_if proto udp from port 68 to port 67
pass out log on $haven_if proto udp from port 67 to port 68
pass in  log quick on $haven_if proto tcp \
  from $haven_if:network to any \
  port { http, https, ssh, syslog-tls } keep state
pass out log quick on $haven_if proto tcp \
  from { $haven_if:0, $int_if:network } to $haven_if:network \
  port { http, https, ssh, 4949 } keep state

## lan-facing physical interface
pass in log quick on $int_if proto { tcp, udp } \
  from $int_if:network to !$int_if:0 \
  port domain rdr-to $int_if:0 keep state
pass in log quick on $int_if proto tcp \
  from $int_if:network to $int_if:0 \
  port { https, ssh, www, 3000 } keep state
pass in log quick on $int_if proto udp \
  from $int_if:network to $int_if:0 \
  port { ntp, syslog } keep state
pass in log quick on $int_if inet proto icmp \
  from $int_if:network to $int_if:0 \
  icmp-type 8 code 0 keep state
pass in  log quick on $int_if proto udp from port 68 to port 67
pass out log quick on $int_if proto udp from port 67 to port 68
pass in  log quick on $int_if from $int_if:network to any keep state
pass out log quick on $int_if from $int_if:0 to $int_if:network 
pass in  log on $int_if \
  proto tcp from any to $ext_if:0 port 24625 \
  rdr-to $umbu_int port 32400
pass out log quick on $int_if proto tcp to $umbu_int port 32400 \
  received-on $int_if nat-to $int_if
pass out log quick on $int_if from any to $int_if:network
